plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'jacoco'
    id 'io.gitlab.arturbosch.detekt'
    id 'org.sonarqube'
}

apply from: "$rootDir/gradle/jacoco.gradle"

android {
    compileSdkVersion 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.santimattius.arch.guide"
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        useIR = true
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

detekt {
    config = files("${project.rootDir}/config/detekt/detekt.yml")
    baseline = file("$rootDir/detekt-baseline.xml")
    autoCorrect = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.test.ext:junit-ktx:1.1.3'

    androidBasic()
    composeGroup()
    koin()
    accompanist()
    lifecycle()
    coil()
    coroutines()
    retrofit()
    room()
    testing()
    androidTests()
    robolectric()
}

sonarqube {
    properties {
        property "sonar.projectVersion", "1.0"
        property "sonar.projectName", "android-architecture-guide"
        property "sonar.projectKey", "android-architecture-guide"
        property "sonar.host.url", "http://localhost:9000/" // or use an external service like https://sonarcloud.io/
        property "sonar.login", "sqp_0cd26c669e07c79a2366ab062a753354ce798667" //To be generated in sonarqube
        property "sonar.language", "kotlin"
        property "sonar.sources","src/main/java"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootProject.projectDir}/app/build/reports/jacoco/testDebugUnitTestCoverage/testDebugUnitTestCoverage.xml"
        prperty  "sonar.kotlin.detekt.reportPaths", "${project.rootDir}/config/detekt/detekt.yml"
    }
}